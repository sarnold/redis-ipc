name: smoke

on:
  workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]

    steps:
    - uses: actions/checkout@v2

    - name: Environment
      run: |
        bash -c set

    # we split the deps for legacy vs json-c versions:
    #   redis-ipc <= 0.0.1 needs json-c <= 0.12
    #   newer redis-ipc needs json-c >= 0.14
    - name: Backports
      if: matrix.os == 'ubuntu-20.04'
      run: |
        sudo apt-get -qq update
        sudo apt-get install -y software-properties-common
        sudo add-apt-repository -y -s ppa:nerdboy/embedded
        sudo apt-get install -y libjson-c-dev

    - name: Upstream
      if: matrix.os == 'ubuntu-18.04'
      run: |
        sudo apt-get -qq update
        sudo apt-get install -y libjson-c-dev

    - name: Common dependencies
      run: |
        sudo apt-get install -y libhiredis-dev autoconf automake
        sudo apt-get install -y redis-tools redis-server

    - name: Patch source
      if: matrix.os == 'ubuntu-20.04'
      run: |
        patch -p1 < compat/0001-fix-build-against-json-c-0_15-on-focal.patch

    - name: Configure
      run: ./autogen.sh

    - name: Build
      run: make

    - name: Message bus
      run: |
        mkdir -p /tmp/redis-ipc
        redis-server --port 0 --pidfile /run/redis.pid --unixsocket /tmp/redis-ipc/socket --unixsocketperm 600 &

    - name: Test
      run: |
        make check

    - name: Cleanup
      run: |
        killall redis-server

  check:
    name: Collect metrics
    runs-on: ubuntu-20.04
    needs: [build]
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - uses: sarnold/cccc-action@main
      with:
        github_token: ${{ secrets.GITHUB_TOKEN}}

    - uses: actions/upload-artifact@v2
      with:
        name: metrics
        path: ./metrics
